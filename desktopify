#!/usr/bin/env bash
set -euo pipefail

# Display help usage
function usage() {
  echo
  echo "Usage:"
  echo "  $0 --de <desktop environment>"
  echo "  $0 --uninstall"
  echo
  echo "Available desktop environments are:"
  echo "  lubuntu"
  echo "  kubuntu"
  echo "  ubuntu"
  echo "  ubuntu-budgie"
  echo "  ubuntu-kylin"
  echo "  ubuntu-mate"
  echo "  ubuntu-studio"
  echo "  xubuntu"
  echo
  echo "You can also pass the optional --oem option which will run a setup"
  echo "wizard on the next boot."
  echo "Use --uninstall to remove the currently installed desktop environment."
}

# Install the specified desktop environment
function install_desktop_environment() {
  local desktop_environment=$1
  case "${desktop_environment}" in
    lubuntu)
      apt-get update
      apt-get install -y lubuntu-desktop
      ;;
    kubuntu)
      apt-get update
      apt-get install -y kubuntu-desktop
      ;;
    ubuntu)
      apt-get update
      apt-get install -y ubuntu-desktop
      ;;
    ubuntu-budgie)
      apt-get update
      apt-get install -y ubuntu-budgie-desktop
      ;;
    ubuntu-kylin)
      apt-get update
      apt-get install -y ubuntukylin-desktop
      ;;
    ubuntu-mate)
      apt-get update
      apt-get install -y ubuntu-mate-desktop
      ;;
    ubuntu-studio)
      apt-get update
      apt-get install -y ubuntustudio-desktop
      ;;
    xubuntu)
      apt-get update
      apt-get install -y xubuntu-desktop
      ;;
    *)
      echo "Unknown desktop environment: ${desktop_environment}"
      usage
      exit 1
      ;;
  esac
}

# Uninstall the currently installed desktop environment
function uninstall_desktop_environment() {
  local detected_environment=""

  if dpkg-query -l lubuntu-desktop &> /dev/null; then
    detected_environment="lubuntu-desktop"
  elif dpkg-query -l kubuntu-desktop &> /dev/null; then
    detected_environment="kubuntu-desktop"
  elif dpkg-query -l ubuntu-desktop &> /dev/null; then
    detected_environment="ubuntu-desktop"
  elif dpkg-query -l ubuntu-budgie-desktop &> /dev/null; then
    detected_environment="ubuntu-budgie-desktop"
  elif dpkg-query -l ubuntukylin-desktop &> /dev/null; then
    detected_environment="ubuntukylin-desktop"
  elif dpkg-query -l ubuntu-mate-desktop &> /dev/null; then
    detected_environment="ubuntu-mate-desktop"
  elif dpkg-query -l ubuntustudio-desktop &> /dev/null; then
    detected_environment="ubuntustudio-desktop"
  elif dpkg-query -l xubuntu-desktop &> /dev/null; then
    detected_environment="xubuntu-desktop"
  else
    echo "No recognized desktop environment installed."
    exit 1
  fi

  echo "Detected desktop environment: ${detected_environment}"
  apt-get remove --purge -y "${detected_environment}"
  apt-get autoremove --purge -y
  echo "[+] Uninstallation of ${detected_environment} complete."
}

# Apply specific tweaks for the desktop environment
function apply_tweaks() {
  local desktop_environment=$1

  if [[ "${desktop_environment}" == "ubuntu-mate" ]]; then
    cat <<EOM > /usr/share/glib-2.0/schemas/50_ubuntu-mate-raspi-tweaks.gschema.override
[org.mate.interface]
enable-animations=false

[org.mate.Marco.general]
compositing-manager=false

[org.mate.session.required-components]
windowmanager='marco-no-composite'
EOM
    glib-compile-schemas /usr/share/glib-2.0/schemas/
  fi

  cat <<EOM > "/boot/firmware/usercfg.txt"
# Place "config.txt" changes (dtparam, dtoverlay, disable_overscan, etc.) in
# this file. Please refer to the README file for a description of the various
# configuration files on the boot partition.

# Enable DRM VC4 V3D driver and configure CMA (Contiguous Memory Allocator) with 512MB
dtoverlay=vc4-kms-v3d,cma-size=512
max_framebuffers=2

# Allocate 512MB of memory to the GPU
gpu_mem=512

# Enable audio (loads snd_bcm2835)
dtparam=audio=on

# Automatically load overlays for detected cameras
camera_auto_detect=1

# Automatically load overlays for detected DSI displays
display_auto_detect=1

# Automatically load initramfs files, if found
auto_initramfs=1

# Don't have the firmware create an initial video= setting in cmdline.txt.
# Use the kernel's default instead.
disable_fw_kms_setup=1

# Run in 64-bit mode
arm_64bit=1

# Disable compensation for displays with overscan
disable_overscan=1

# Run as fast as firmware / board allows
arm_boost=1

# Uncomment some or all of these to enable the optional hardware interfaces
#dtparam=i2c_arm=on
#dtparam=i2s=on
#dtparam=spi=on

# Additional overlays and parameters are documented
# /boot/firmware/overlays/README

[all]
EOM

  echo "net.ifnames=0 dwc_otg.lpm_enable=0 console=serial0,115200 console=tty1 root=LABEL=writable rootfstype=ext4 elevator=deadline rootwait fixrtc quiet splash plymouth.ignore-serial-consoles" > "/boot/firmware/cmdline.txt"
}

# Configure network settings
function configure_network() {
  echo "[+] Configuring network..."
  # Disable cloud-init from managing the network
  echo "network: {config: disabled}" > /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg

  # Instruct netplan to hand all network management to NetworkManager
  cat <<EOM > /etc/netplan/01-network-manager-all.yaml
# Let NetworkManager manage all devices on this system
network:
  version: 2
  renderer: NetworkManager
EOM

  # Disable Wifi Powersaving to improve Pi WiFi performance
  if [[ -f /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf ]]; then
    sed -i 's/wifi.powersave = 3/wifi.powersave = 2/' /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf
  else
    echo -e "[connection]\nwifi.powersave = 2" > /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf
  fi
}

# Display a menu for selecting the desktop environment
function display_menu() {
  echo "Please select a desktop environment to install:"
  echo "1) lubuntu"
  echo "2) kubuntu"
  echo "3) ubuntu"
  echo "4) ubuntu-budgie"
  echo "5) ubuntu-kylin"
  echo "6) ubuntu-mate"
  echo "7) ubuntu-studio"
  echo "8) xubuntu"
  echo "9) Exit"
  read -p "Enter the number of your choice: " choice

  case $choice in
    1) desktop_environment="lubuntu" ;;
    2) desktop_environment="kubuntu" ;;
    3) desktop_environment="ubuntu" ;;
    4) desktop_environment="ubuntu-budgie" ;;
    5) desktop_environment="ubuntu-kylin" ;;
    6) desktop_environment="ubuntu-mate" ;;
    7) desktop_environment="ubuntu-studio" ;;
    8) desktop_environment="xubuntu" ;;
    9) echo "Exiting..."; exit 0 ;;
    *) echo "Invalid choice, exiting..."; exit 1 ;;
  esac
}

# Main function to parse arguments and execute necessary functions
function main() {
  local desktop_environment=""
  local oem_setup=false
  local uninstall=false

  # Parse command line arguments
  while [[ "$#" -gt 0 ]]; do
    case $1 in
      --de) desktop_environment="$2"; shift ;;
      --oem) oem_setup=true ;;
      --uninstall) uninstall=true ;;
      *) echo "Unknown parameter passed: $1"; usage; exit 1 ;;
    esac
    shift
  done

  if [[ "${uninstall}" == true ]]; then
    uninstall_desktop_environment
    exit 0
  fi

  if [[ -z "${desktop_environment}" ]]; then
    display_menu
  fi

  # Install the specified desktop environment
  install_desktop_environment "${desktop_environment}"

  # Apply desktop-specific tweaks
  apply_tweaks "${desktop_environment}"

  # Configure network
  configure_network

  echo "[+] Conversion to ${desktop_environment} complete."
  if [[ "${oem_setup}" == true ]]; then
    echo "[+] OEM setup will run on next boot."
  fi
}

# Execute the main function
main "$@"
